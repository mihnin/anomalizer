# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-pyt
name: Python CI/CD with Docker

# Запускаем на пуши и pull-реквесты в ветку main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Первая задача: Линтинг и Тестирование
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        python -m pytest

  # Вторая задача: Сборка и публикация Docker-образа
  build-and-push-docker:
    # Эта задача будет запущена только после успешного завершения задачи 'test'
    needs: test 
    runs-on: ubuntu-latest
    # Этот шаг выполняется ТОЛЬКО при пуше в main, а не на Pull Request
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} # Логин от Docker Hub
        password: ${{ secrets.DOCKERHUB_TOKEN }}    # Пароль (токен) от Docker Hub

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/anomalizer:latest # Имя образа: ваш-логин/anomalizer:latest